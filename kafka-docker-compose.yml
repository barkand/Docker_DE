version: '3'
services:

  kafka-zookeeper1:
    image: confluentinc/cp-zookeeper:${KAFKA_VERSION}
    container_name: kafka-zookeeper1
    hostname: kafka-zookeeper1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - ${KAFKA_ZOOKEEPER1_PORT}:2181
    networks:
      - kafka-network
    volumes: 
      - ./kafka/zoo-cluster/zoo1/data:/var/lib/zookeeper/data
      - ./kafka/zoo-cluster/zoo1/log:/var/lib/zookeeper/log

  kafka1:
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    container_name: kafka1
    hostname: kafka1
    depends_on:
      - kafka-zookeeper1
    ports:
      - "29092:29092"
      - ${KAFKA1_PORT}:9091
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'kafka-zookeeper1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:${KAFKA1_PORT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: kafka-zookeeper1:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
    networks:
      - kafka-network
    volumes: 
      - ./kafka/kafka-cluster/kafka1/data:/var/lib/kafka/data
      - ./kafka/kafka-cluster/kafka1/logs:/var/lib/kafka/logs
      - ./kafka/kafka-cluster/kafka1/secrets:/etc/kafka/secrets

  kafka-connect:
    build:
      context: ./kafka/connect
    container_name: kafka-connect
    hostname: kafka-connect
    depends_on:
      - kafka-zookeeper1
      - kafka1
    ports:
      - ${KAFKA_CONNECT_PORT}:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka1:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_ZOOKEEPER_CONNECT: 'kafka-zookeeper1:2181'
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.4.1.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: 'io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor'
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: 'io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor'
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components'
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    networks:
      - kafka-network

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:${KAFKA_VERSION}
    container_name: kafka-schema-registry
    hostname: kafka-schema-registry
    depends_on:
      - kafka-zookeeper1
      - kafka1
    ports:
      - ${KAFKA_SCHEMA_REGISTRY_PORT}:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'kafka-zookeeper1:2181'
    networks:
      - kafka-network
    restart: unless-stopped

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:${KAFKA_VERSION}
    hostname: kafka-rest-proxy
    container_name: kafka-rest-proxy
    depends_on:
      - kafka1
      - kafka-schema-registry
    ports:
      - ${KAFKA_REST_PROXY_PORT}:8082
    environment:
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka1:29092'
      KAFKA_REST_LISTENERS: http://0.0.0.0:${KAFKA_KSQLDB_SERVER_PORT}
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:${KAFKA_SCHEMA_REGISTRY_PORT}
    networks:
      - kafka-network
    restart: always

  kafka-akhq:
    image: tchiotludo/akhq
    container_name: kafka-akhq  
    hostname: kafka-akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka1:29092"
              schema-registry:
                url: http://kafka-schema-registry:${KAFKA_SCHEMA_REGISTRY_PORT}
              connect:
                - name: "kafka-connect"
                  url: http://kafka-connect:${KAFKA_CONNECT_PORT}
    ports:
      - ${KAFKA_AKHQ_PORT}:8080
    links:
      - kafka1
      - kafka-schema-registry
    networks:
      - kafka-network

  kafka-ksqldb-server:
    image: confluentinc/cp-ksqldb-server:${KAFKA_VERSION}
    container_name: kafka-ksqldb-server
    hostname: kafka-ksqldb-server
    depends_on:
      - kafka1
      - kafka-schema-registry
    ports:
      - ${KAFKA_KSQLDB_SERVER_PORT}:8088
    environment:
      KSQL_CONFIG_DIR: "/etc/ksqldb"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksqldb/log4j.properties"
      KSQL_BOOTSTRAP_SERVERS: "kafka1:29092"
      KSQL_HOST_NAME: kafka-ksqldb-server
      KSQL_LISTENERS: http://0.0.0.0:${KAFKA_KSQLDB_SERVER_PORT}
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:${KAFKA_SCHEMA_REGISTRY_PORT}
      KSQL_CONNECT_URL: http://kafka-connect:${KAFKA_CONNECT_PORT}
    networks:
      - kafka-network

  kafka-ksqldb-cli:
    image: confluentinc/cp-ksqldb-cli:${KAFKA_VERSION}
    container_name: kafka-ksqldb-cli
    hostname: kafka-ksqldb-cli
    depends_on:
      - kafka1
      - kafka-ksqldb-server
    entrypoint: /bin/sh
    environment:
      KSQL_CONFIG_DIR: "/etc/ksqldb"
    tty: true
    volumes:
      - ./kafka/ksqldb/src:/opt/app/src
      - ./kafka/ksqldb/test:/opt/app/test
    networks:
      - kafka-network
  

networks:
  kafka-network:
    driver: bridge
    name: kafka-network

# note:
# C:\Windows\System32\drivers\etc\hosts   >> 127.0.0.1 kafka1
